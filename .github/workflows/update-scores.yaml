
name: Update scores

on:
  workflow_dispatch:

jobs:
  get-pr-data:
    name: Get pull request data from scores database
    runs-on: ubuntu-latest
    outputs:
      pr-data: ${{ steps.matrix.outputs.pr-data }}
    steps:
      - name: Checkout pull request target
        uses: actions/checkout@v3
      - name: Install Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Load scores database and get pull request data
        env:
          DATABASE_PATH: docs/sphinx/source/scores_database.json
        run: |
          export PR_DATA=$(python3 -c "
          import json
          with open('${{ env.DATABASE_PATH }}', 'r') as file:
              database = json.load(file)
          pr_data = []
          for pr_number, data in database.items():
              pair = [pr_number, data['username']]
              pr_data .append(pair)
          print(pr_data)
          ")
          echo PR_DATA=$PR_DATA >> ${{ github.env }}
      - name: Set pull request data output
        id: matrix
        run: |
          echo "::set-output name=pr-data::${{ env.PR_DATA }}"

  build:
    runs-on: ubuntu-latest
    needs: get-pr-data
    strategy:
      matrix:
        pr-data: ${{ fromJson(needs.get-pr-data.outputs.pr-data) }}
    env:
      PR_NUMBER: ${{ matrix.pr-data[0] }}
      PR_USERNAME: ${{ matrix.pr-data[1] }}
    steps:
      - name: Checkout base main
        uses: actions/checkout@v3
      - name: Checkout pull request HEAD
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh pr checkout ${{ env.PR_NUMBER }}
      - name: Rename submission folder
        working-directory: submissions
        # '--' is not allowed in GitHub usernames
        run: cp -r ${{ env.PR_USERNAME }} ${{ env.PR_NUMBER}}--${{ env.PR_USERNAME }}
      - name: Upload renamed submission folder
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.PR_NUMBER }}--${{ env.PR_USERNAME }}
          path: submissions/${{ env.PR_NUMBER }}--${{ env.PR_USERNAME }}

  score-all-submissions:
    name: Score all submissions
    runs-on: ubuntu-latest
    needs:
      - get-pr-data
      - build
    env:
      PR_DATA: ${{ needs.get-pr-data.outputs.pr-data }}
    steps:
      - name: Checkout base main
        uses: actions/checkout@v3
      - name: Install Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Clear submissions folder
        run: |
          rm -r submissions
          mkdir submissions
      - name: Download all submissions from artifacts
        uses: actions/download-artifact@v3
        with:
          path: submissions
      - name: debug
        run: ls -R submissions
      - name: Run all submissions
        run: |
          pr_numbers=($(echo '${{ toJson(fromJson(env.PR_DATA)[*][0]) }}' | tr -d '[",\\n]'))
          pr_usernames=($(echo '${{ toJson(fromJson(env.PR_DATA)[*][1]) }}' | tr -d '[",\\n]'))
          pr_data_length=${#pr_numbers[@]}
          REPO_BASE=$(pwd)

          for ((i=0; i<$pr_data_length; i++)); do
            echo ${pr_numbers[i]} , ${pr_usernames[i]}
            submissions_folder=submissions/${pr_numbers[i]}--${pr_usernames[i]}

            # read pr_config.json into environment variables
            env_vars=($(python3 .github/workflows/utils/print_json_as_env.py ${submissions_folder}/pr_config.json --validate-pr-config --split-path-variables | tr '\n' ' '))
            for var in ${env_vars[@]}; do
              echo $var
              export $var
            done

            if ! $RUN_SCORER; then
              continue
            fi

            # set up virtual environment
            # --system-site-packages exposes system packages (ivcurves requirements)
            python3 -m venv ${submissions_folder}/env --system-site-packages # expose system packages (ivcurves requirements)
            source ${submissions_folder}/env/bin/activate

            # install submission requirements
            pip3 install -r "$submissions_folder"/"$REQUIREMENTS_PATH"/"$REQUIREMENTS_FILENAME"

            # run submission
            python3 "$submissions_folder"/"$SUBMISSION_MAIN_PATH"/"$SUBMISSION_MAIN_FILENAME"

            ls -R $submissions_folder

            # deactivate and remove virtual environment
            deactivate
            rm -r ${submissions_folder}/env
          done

